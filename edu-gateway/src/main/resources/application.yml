server:
  port: 9527
  #跳过认证的路由
  skip-auth-urls: /user/login

spring:
  application:
    name: edu-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: test
          uri: lb://edu-service-usercenter
          predicates:
            - Path=/api/**
          filters:
            - StripPrefix=1

        - id: test1
          uri: lb://edu-authentication
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=1

        - id: edu-authentication
          uri: lb://edu-authentication  # 后端服务名
          predicates:
            - Path=/loginUser

        - id: edu-service-usercenter
          uri: lb://edu-service-usercenter
          predicates:
            - Path=/user/**          #断言，路径相匹配的进行路由
          filters:
            - JwtCheck

        #        - id: edu-usercenter  #用户登陆   #路由的ID，没有固定规则但要求唯一，简易配合服务名
        #          uri: lb://edu-service-usercenter         #匹配后提供服务的路由地址
        #          predicates:
        #            - Path=/user/login          #断言，路径相匹配的进行路由
        #        - id: edu-usercenter  #用户模块    #路由的ID，没有固定规则但要求唯一，简易配合服务名
        #          uri: lb://edu-service-usercenter         #匹配后提供服务的路由地址
        #          predicates:
        #            - Path=/user/login          #断言，路径相匹配的进行路由
        #            #- Cookies=Authorization,

        - id: edu-course #课程模块8003
          uri: lb://edu-service-course
          predicates:
            - Path=/course/**
            # - Cookies=   #Cookies=cookies name，正则表达式匹配  (key,value)

        - id: edu-organization # 机构模块8006
          uri: lb://edu-service-organization
          predicates:
            - Path=/organization/**

        - id: edu-student # 学生模块8007
          uri: lb://edu-service-student
          predicates:
            - Path=/student/**

        - id: edu-shopping #商品模8009
          uri: lb://edu-service-shopping
          predicates:
            - Path=/courseMer/** #课程商品管理

        - id: edu-shopping #商品模8009
          uri: lb://edu-service-shopping
          predicates:
            - Path=/merchandise/** #商品管理

        - id: edu-shopping #商品模8009
          uri: lb://edu-service-shopping
          predicates:
            - Path=/order/** #订单管理

        - id: edu-shopping #商品模8009
          uri: lb://edu-service-shopping
          predicates:
            - Path=/shoppingCart/** #购物车管理

        - id: edu-shopping #商品模8009
          uri: lb://edu-service-shopping
          predicates:
            - Path=/payment/** #支付管理

        - id: edu-payment # 支付模块8010
          uri: lb://edu-service-payment
          predicates:
            - Path=//transaction/**
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: 'http://localhost:9401/rsa/publicKey' #配置RSA的公钥访问地址

  redis:
    database: 0
    port: 8085
    host: 139.129.101.91
    password: Xkj_13011301
    timeout: 2000

management:
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  instance:
    hostname: edu-gateway
  client:
    #表示是否将自己注册进EurekaServer 默认为true
    register-with-eureka: true
    # 是否从EurekaServer抓取已有的注册信息，默认为true.单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    feth-registry: true
    serviceUrl:
      defaultZone: http://localhost:7001/eureka
#      defaultZone: http://eureka7001.com:7001/eureka, http://eureka7002.com:7002/eureka #集群版

secure:
  ignore:
    urls: #配置白名单路径
      - "/actuator/**"
      - "/auth/oauth/token"