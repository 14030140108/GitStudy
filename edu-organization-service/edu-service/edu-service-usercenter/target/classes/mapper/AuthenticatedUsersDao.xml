<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oes.dao.AuthenticatedUsersDao">

    <resultMap type="com.oes.model.entity.AuthenticatedUser" id="AuthenticatedUsersMap">
        <result property="userid" column="userid" jdbcType="OTHER"/>
        <result property="idcard" column="idcard" jdbcType="VARCHAR"/>
        <result property="idcardPhoto" column="idcard_photo" jdbcType="OTHER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="province" column="province" jdbcType="VARCHAR"/>
        <result property="city" column="city" jdbcType="VARCHAR"/>
        <result property="district" column="district" jdbcType="VARCHAR"/>
        <result property="qq" column="qq" jdbcType="VARCHAR"/>
        <result property="weixin" column="weixin" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    userid, idcard, idcard_photo, name, province, city, district, qq, weixin
  </sql>

    <select id="countByExample" parameterType="com.oes.model.example.AuthUserExample" resultType="java.lang.Long">
        select count(*) from authenticated_users
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <select id="selectByExample" parameterType="com.oes.model.example.AuthUserExample" resultMap="AuthenticatedUsersMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List" />
        from authenticated_users
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="AuthenticatedUsersMap">
        select
          userid, idcard, idcard_photo, name, province, city, district, qq, weixin
        from authenticated_users
        where userid = #{userid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AuthenticatedUsersMap">
        select
          userid, idcard, idcard_photo, name, province, city, district, qq, weixin
        from authenticated_users
        limit #{offset}, #{limit}
    </select>

    <select id="queryByEntity" resultMap="AuthenticatedUsersMap">
        select
        userid, idcard, idcard_photo, name, province, city, district, qq, weixin
        from authenticated_users
        <where>
            <if test="userid != null">
                and userid = #{userid}
            </if>
            <if test="idcard != null and idcard != ''">
                and idcard = #{idcard}
            </if>
            <if test="idcardPhoto != null and idcardPhoto !=0 ">
                and idcard_photo = #{idcardPhoto}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="province != null and province != ''">
                and province = #{province}
            </if>
            <if test="city != null and city != ''">
                and city = #{city}
            </if>
            <if test="district != null and district != ''">
                and district = #{district}
            </if>
            <if test="qq != null and qq != ''">
                and qq = #{qq}
            </if>
            <if test="weixin != null and weixin != ''">
                and weixin = #{weixin}
            </if>
        </where>
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="AuthenticatedUsersMap">
        select
          userid, idcard, idcard_photo, name, province, city, district, qq, weixin
        from authenticated_users
    </select>

    <select id="queryNamesByIds" resultType="com.oes.model.entity.AuthenticatedUser">
        select userid,name from authenticated_users where userid in
        <foreach collection="userIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="userid" useGeneratedKeys="true">
        insert into authenticated_users(userid,idcard,
                                        <if test="idcardPhoto!= null and idcard != null">
                                            idcard_photo,
                                        </if>  name, province, city, district, qq, weixin)
        values (#{userid},#{idcard},
        <if test="idcardPhoto!= null and idcard != null">
            #{idcardPhoto},
        </if>
         #{name}, #{province}, #{city}, #{district}, #{qq}, #{weixin})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update authenticated_users
        <set>
            <if test="idcard != null and idcard != ''">
                idcard = #{idcard},
            </if>
            <if test="idcardPhoto != null and idcardPhoto != 0">
                idcard_photo = #{idcardPhoto},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="province != null and province != ''">
                province = #{province},
            </if>
            <if test="city != null and city != ''">
                city = #{city},
            </if>
            <if test="district != null and district != ''">
                district = #{district},
            </if>
            <if test="qq != null and qq != ''">
                qq = #{qq},
            </if>
            <if test="weixin != null and weixin != ''">
                weixin = #{weixin},
            </if>
        </set>
        where userid = #{userid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from authenticated_users where userid = #{userid}
    </delete>

</mapper>