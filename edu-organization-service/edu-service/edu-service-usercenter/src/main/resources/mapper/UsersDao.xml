<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oes.dao.UsersDao">

    <resultMap type="com.oes.model.entity.User" id="UsersMap">
        <result property="userid" column="userid" jdbcType="INTEGER"/>
        <result property="account" column="account" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="mail" column="mail" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="TINYINT" javaType="com.oes.model.enums.Gender"
                typeHandler="com.oes.handlers.GenderTypeHandler"/>
        <result property="birth" column="birth" jdbcType="DATE"/>
        <result property="profilePhoto" column="profile_photo" jdbcType="INTEGER"/>
        <result property="authenticated" column="authenticated" jdbcType="TINYINT"/>
        <result property="hasBankcard" column="has_bankcard" jdbcType="TINYINT"/>
        <result property="defaultRole" column="default_role" jdbcType="TINYINT"/>
        <result property="role1" column="role1" jdbcType="TINYINT"/>
        <result property="role2" column="role2" jdbcType="TINYINT"/>
        <result property="role3" column="role3" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

    <sql id="BaseColumn">
        userid, account, password, nickname, phone, mail, gender, birth, profile_photo, authenticated,
        has_bankcard, default_role, role1, role2, role3
    </sql>

    <select id="selectByExample" parameterType="com.oes.model.example.UserExample" resultMap="UsersMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="BaseColumn" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

    <select id="countByExample" parameterType="com.oes.model.example.UserExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

    <!--查询单个-->
    <select id="queryById" resultMap="UsersMap">
        select
            <include refid="BaseColumn"/>
        from users
        where userid = #{userid}
    </select>

    <select id="queryByAccount" resultMap="UsersMap">
        select
        <include refid="BaseColumn"/>
        from users
        where account = #{account}
    </select>

    <select id="queryByPrimaryKey" resultMap="UsersMap" parameterType="com.oes.model.query.user.UserPrimaryKey">
        select
        <include refid="BaseColumn"/>
        from users
        <where>
            <if test="userid != null and userid != 0">
                and userid = #{userid}
            </if>
            <if test="account != null and account != ''">
                and account = #{account}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="mail != null and mail != ''">
                and mail = #{mail}
            </if>
        </where>
    </select>

    <select id="queryByNickName" resultMap="UsersMap">
        select
        <include refid="BaseColumn"/>
        from users
        where nickname = #{nickname}
    </select>

    <select id="queryByGender" resultMap="UsersMap">
        select
        <include refid="BaseColumn"/>
        from users
        where gender = #{gender}
    </select>

    <select id="queryByRole" resultMap="UsersMap">
        select *
        from users
        where default_role = #{roleId} or role1 = #{roleId} or role2 = #{roleId} or role3 = #{roleId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UsersMap">
        select
        <include refid="BaseColumn"/>
        from users
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryByEntity" resultMap="UsersMap">
        select
        userid, account, password, nickname, phone, mail, gender, birth, profile_photo, authenticated, has_bankcard,
        default_role, role1, role2, role3
        from users
        <where>
            <if test="userid != 0">
                and userid = #{userid}
            </if>
            <if test="account != null and account != ''">
                and account = #{account}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickname = #{nickname}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="mail != null and mail != ''">
                and mail = #{mail}
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="birth != null">
                and birth = #{birth}
            </if>
            <if test="profilePhoto != 0">
                and profile_photo = #{profilePhoto}
            </if>
            <if test="authenticated != null">
                and authenticated = #{authenticated}
            </if>
            <if test="hasBankcard != null">
                and has_bankcard = #{hasBankcard}
            </if>
            <if test="defaultRole != 0">
                and default_role = #{defaultRole}
            </if>
            <if test="role1 != 0">
                and role1 = #{role1}
            </if>
            <if test="role2 != 0">
                and role2 = #{role2}
            </if>
            <if test="role3 != 0">
                and role3 = #{role3}
            </if>
        </where>
    </select>


    <select id="queryAll" resultMap="UsersMap">
        select
        <include refid="BaseColumn"/>
        from users
    </select>

    <select id="queryPasswordByUserid" resultType="java.lang.String">
        select password from users where userid = #{userid} and default_role = 8
    </select>

    <select id="queryPasswordByAccount" resultType="java.lang.String">
        select password from users where account = #{account} and default_role = 7
    </select>

    <select id="checkPhone" resultType="com.oes.model.entity.User" resultMap="UsersMap">
        select
        <include refid="BaseColumn"/>
        from users
        where phone = #{phone}
    </select>


    <!--新增所有列-->
    <insert id="insert" keyProperty="userid" useGeneratedKeys="true">
        insert into users(account, password, nickname, phone, mail, birth,
        <if test="gender == null">
            gender,
        </if>
        <if test="gender != null">
            gender,
        </if>
        <if test="profilePhoto != 0">
            profile_photo,
        </if>
        authenticated, has_bankcard
        <if test="defaultRole != 0">
            ,default_role
        </if>
        <if test="role1 != 0">
            ,role1
        </if>
        <if test="role2 != 0">
            ,role2
        </if>
        <if test="role3 != 0">
            ,role3
        </if>)
        values (#{account}, #{password}, #{nickname}, #{phone}, #{mail}, #{birth},
        <if test="gender == null">
            2,
        </if>
        <if test="gender != null">
            #{gender},
        </if>
        <if test="profilePhoto != 0">
            #{profilePhoto},
        </if>
        #{authenticated}, #{hasBankcard}
        <if test="defaultRole != 0">
            ,#{defaultRole}
        </if>
        <if test="role1 != 0">
            ,#{role1}
        </if>
        <if test="role2 != 0">
            ,#{role2}
        </if>
        <if test="role3 != 0">
            ,#{role3}
        </if>)
    </insert>

    <!--通过用户id修改数据-->
    <update id="update">
        update users
        <set>
            <if test="account != null and account != ''">
                account = #{account},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="mail != null and mail != ''">
                mail = #{mail},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="birth != null">
                birth = #{birth},
            </if>
            <if test="profilePhoto != null and profilePhoto != 0">
                profile_photo = #{profilePhoto},
            </if>
            <if test="authenticated != null and authenticated!=false">
                authenticated = #{authenticated},
            </if>
            <if test="hasBankcard != null and hasBankcard != false">
                has_bankcard = #{hasBankcard},
            </if>
            <if test="defaultRole != null and defaultRole != 0">
                default_role = #{defaultRole},
            </if>
            <if test="role1 != null and role1 != 0">
                role1 = #{role1},
            </if>
            <if test="role2 != null and role2 != 0">
                role2 = #{role2},
            </if>
            <if test="role3 != null and role3 != 0">
                role3 = #{role3},
            </if>
        </set>
        where userid = #{userid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from users
        where userid = #{userid}
    </delete>

</mapper>