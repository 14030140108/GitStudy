<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oes.dao.CourseEnrollDao">
    <resultMap id="BaseResultMap" type="com.oes.entity.CourseEnroll">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="course_id" jdbcType="INTEGER" property="courseId"/>
        <result column="student_id" jdbcType="INTEGER" property="studentId"/>
        <result column="enroll_time" jdbcType="TIMESTAMP" property="enrollTime"/>
        <result column="status" jdbcType="OTHER" property="status"
                typeHandler="com.oes.handlers.EnrollCourseTypeHandler"/>
        <result column="fail_reason" jdbcType="OTHER" property="fail_reason"/>
    </resultMap>

    <resultMap id="WithCourNameAndStuNameResultMap" type="com.oes.vo.EnrollCoursesVO">
        <result column="course_id" jdbcType="INTEGER" property="courseId"/>
        <result column="course_name" property="courseName" jdbcType="VARCHAR"/>
        <result column="student_id" jdbcType="INTEGER" property="studentId"/>
        <result column="student_name" property="studentName" jdbcType="VARCHAR"/>
        <result column="enroll_time" jdbcType="TIMESTAMP" property="enrollTime"/>
        <result column="status" jdbcType="OTHER" property="status"
                typeHandler="com.oes.handlers.EnrollCourseTypeHandler"/>
        <result column="fail_reason" jdbcType="OTHER" property="fail_reason"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, course_id, student_id, enroll_time, status, fail_reason
    </sql>

    <resultMap id="CourseEnrollMap" type="com.oes.dto.EnrollCoursesDTO">
        <id column="course_id" property="courseId" jdbcType="OTHER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="startTime" property="startTime" jdbcType="OTHER"/>
        <result column="endTime" property="endTime" jdbcType="OTHER"/>
        <result property="status" column="status" jdbcType="OTHER"
                typeHandler="com.oes.handlers.EnrollCourseTypeHandler"/>
        <result property="fail_reason" column="fail_reason" jdbcType="VARCHAR"/>
        <result property="courseOrgId" column="org_id" jdbcType="OTHER"/>
        <association property="teacherList" javaType="com.oes.model.vo.CourseTeacherVo">
            <result column="teacher1Id" property="teacher1Id" jdbcType="OTHER"/>
            <result column="name1" property="teacher1name" jdbcType="VARCHAR"/>
            <result column="teacher2Id" property="teacher2Id" jdbcType="OTHER"/>
            <result column="name2" property="teacher2name" jdbcType="VARCHAR"/>
        </association>
        <association property="assistantList" javaType="com.oes.model.vo.CourseTeacherVo">
            <result column="ass_teacher1Id" property="teacher1Id" jdbcType="OTHER"/>
            <result column="ass_name1" property="teacher1name" jdbcType="VARCHAR"/>
            <result column="ass_teacher2Id" property="teacher2Id" jdbcType="OTHER"/>
            <result column="ass_name2" property="teacher2name" jdbcType="VARCHAR"/>
        </association>
    </resultMap>


    <select id="getUncheckedEnrollCourses" parameterType="java.lang.Long" resultMap="WithCourNameAndStuNameResultMap">
        select
            ce.course_id   as course_id,
            c.name         as course_name,
            ce.student_id  as student_id,
            s.name         as student_name,
            ce.enroll_time as enroll_time,
            ce.status      as status,
            ce.fail_reason as fail_reason
        from course_enroll ce, courses c, students as s
        where ce.course_id = c.course_id and ce.student_id = s.userid and c.organization_id = #{orgId} and ce.status = 0
    </select>

    <select id="getEnrollCoursesInfo" resultMap="CourseEnrollMap">
        select
        c.course_id as course_id,
        c.name as name,
        c.start_time as startTime,
        c.end_time as endTime,
        c.teacher1_id as teacher1Id,
        c.teacher2_id as teacher2Id,
        c.assistant1_id as ass_teacher1Id,
        c.assistant2_id as ass_teacher2Id,
        ce.status as status,
        ce.fail_reason as fail_reason,
        c.organization_id as org_id
        from courses c, course_enroll ce
        <where>
            c.course_id = ce.course_id
            and
            <if test="org_id != 0">
                c.organization_id = #{org_id} and
            </if>
            <if test="status !=0">
                ce.status = #{status} and
            </if>
            ce.student_id = #{stu_id}
        </where>
    </select>

    <select id="queryByUserIdAndCourseId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from course_enroll
        where student_id = #{userId} and course_id = #{courseId}
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from course_enroll
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from course_enroll
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.oes.entity.CourseEnroll">
        insert into course_enroll (id, course_id, student_id,
                                   enroll_time, status, fail_reason)
        values (#{id,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER},
                #{enrollTime,jdbcType=TIMESTAMP}, #{status}, #{fail_reason})
    </insert>
    <insert id="insertSelective" parameterType="com.oes.entity.CourseEnroll">
        insert into course_enroll
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="enrollTime != null">
                enroll_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="fail_reason != null">
                fail_reason,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=INTEGER},
            </if>
            <if test="enrollTime != null">
                #{enrollTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status}
            </if>
            <if test="fail_reason != null">
                #{fail_reason}
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.oes.entity.CourseEnroll">
        update course_enroll
        <set>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=INTEGER},
            </if>
            <if test="enrollTime != null">
                enroll_time = #{enrollTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="fail_reason != null">
                fail_reason = #{fail_reason}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.oes.entity.CourseEnroll">
        update course_enroll
        set course_id   = #{courseId,jdbcType=INTEGER},
            student_id  = #{studentId,jdbcType=INTEGER},
            enroll_time = #{enrollTime,jdbcType=TIMESTAMP},
            status      = #{status},
            fail_reason = #{fail_reason}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteByStuIdAndCourseId">
        delete from course_enroll
        where course_id = #{courseId} and student_id = #{stuId}
    </delete>

    <select id="getStudentInfoByCourseId" resultType="com.oes.model.dto.CourseStudentDTO">
        select
        u.userid as userId, u.phone as phone, u.mail as mail, u.gender as gender,
        s.name as name, s.school as school, s.grade as grade, s.qq as qq,
        s.weixin as weixin, s.second_tel as secondTel, c.enroll_time as enrollTime
        from users u, students s, course_enroll c
        where u.userid = s.userid and s.userid = c.student_id and c.course_id = #{courseId}
    </select>

    <select id="getTryStudentInfoByCourseId" resultType="com.oes.model.dto.CourseStudentDTO">
        select
        u.userid as userId, u.phone as phone, u.mail as mail, u.gender as gender,
        s.name as name, s.school as school, s.grade as grade, s.qq as qq,
        s.weixin as weixin, s.second_tel as secondTel, c.reservation_time as reservationTime,
        c.trial_time as trialTime
        from users u, students s, course_trial c
        where u.userid = s.userid and s.userid = c.student_id and c.course_id = #{courseId}
    </select>
</mapper>